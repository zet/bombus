Index: src/io/file/FileIO.java
===================================================================
--- src/io/file/FileIO.java	(revision 738)
+++ src/io/file/FileIO.java	(working copy)
@@ -23,6 +23,7 @@
     private final static int NONE=-1;
     private final static int JSR75=1;
     private final static int COM_MOTOROLA=2;
+    public final static int SIEMENS2=3;
     
     private static int fileSystemType;
     
@@ -39,10 +40,16 @@
                 Class.forName("com.motorola.io.FileConnection");
                 fileSystemType=COM_MOTOROLA;
             } catch (Exception e) {}
+            try
+            {
+                Class.forName("com.siemens.mp.io.File");
+                fileSystemType=SIEMENS2;
+            } catch (Exception e) { }
         }
         switch (fileSystemType) {
             case JSR75: return new FileJSR75(fileName);
             case COM_MOTOROLA: return new FileComMotorolaIo(fileName);
+            case SIEMENS2: return new FileSiemens(fileName);
         }
         return null;
     }
Index: src/io/file/FileSiemens.java
===================================================================
--- src/io/file/FileSiemens.java	(revision 0)
+++ src/io/file/FileSiemens.java	(revision 0)
@@ -0,0 +1,87 @@
+/*
+ * FileSiemens.java
+ *
+ * Created on 3 ќкт€брь 2006 г., 15:27
+ */
+
+package io.file;
+
+import Info.Version;
+import com.siemens.mp.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.util.Enumeration;
+import java.util.Vector;
+
+public class FileSiemens extends FileIO{
+    
+    private File F;
+    private int fd;
+
+    public FileSiemens(String fileName) {
+        this.fileName=fileName;
+    }
+    
+    public void openFile() throws IOException{
+	F = new File();
+        if (fileName.startsWith("/0:/")) fileName="0:\\"+fileName.substring(4);
+        if (fileName.startsWith("/1:/")) fileName="1:\\"+fileName.substring(4);
+        if (fileName.startsWith("/2:/")) fileName="2:\\"+fileName.substring(4);
+        if (fileName.startsWith("/3:/")) fileName="3:\\"+fileName.substring(4);
+        if (fileName.startsWith("/4:/")) fileName="4:\\"+fileName.substring(4);
+        fileName=fileName.replace('/', '\\');
+        fd = F.open(fileName);
+    }
+    
+    public void close() throws IOException{
+	F.close(fd);
+	F = null;
+    }
+    
+    public boolean isDirectory(String name) throws Exception {
+	return F.isDirectory(name);
+    }
+    
+    public long fileSize() throws IOException {
+	return F.length(fd);
+    }
+
+    protected Vector rootDirs() {
+        Vector rd = new Vector();
+        rd.addElement("0:/");
+        rd.addElement("1:/");
+        rd.addElement("2:/");
+        rd.addElement("3:/");
+        rd.addElement("4:/");
+        return rd;
+    }
+
+    protected Vector dirs(boolean directoriesOnly) throws IOException{
+        if (fileName.startsWith("/0:/")) fileName="0:\\"+fileName.substring(4);
+        if (fileName.startsWith("/1:/")) fileName="1:\\"+fileName.substring(4);
+        if (fileName.startsWith("/2:/")) fileName="2:\\"+fileName.substring(4);
+        if (fileName.startsWith("/3:/")) fileName="3:\\"+fileName.substring(4);
+        if (fileName.startsWith("/4:/")) fileName="4:\\"+fileName.substring(4);
+        fileName=fileName.replace('/', '\\');
+        Vector rd=new Vector(File.list(fileName).length + 1);
+        for (int i = 0; i < File.list(fileName).length; i++) {
+            try {
+                if (isDirectory(fileName+(String)File.list(fileName)[i])) {
+                    rd.addElement((String)File.list(fileName)[i]+"/");    
+                } else {
+                    rd.addElement((String)File.list(fileName)[i]);
+                }
+            } catch (Exception e) {}
+        }
+        return rd;
+    }
+
+    public OutputStream openOutputStream() throws IOException {
+        return null;
+    }
+
+    public InputStream openInputStream() throws IOException {
+        return null;
+    }  
+}
\ No newline at end of file
Index: src/vcard/vCardForm.java
===================================================================
--- src/vcard/vCardForm.java	(revision 738)
+++ src/vcard/vCardForm.java	(working copy)
@@ -10,6 +10,7 @@
 package vcard;
 import Client.StaticData;
 //#if (FILE_IO)
+import com.siemens.mp.io.File;
 import io.file.FileIO;
 import io.file.browse.Browser;
 import io.file.browse.BrowserListener;
@@ -137,16 +138,56 @@
     }
 
 //#if (FILE_IO)
+    static String replace(String str, String pattern, String replace) {
+        int s = 0;
+        int e = 0;
+        StringBuffer result = new StringBuffer();
+    
+        while ((e = str.indexOf(pattern, s)) >= 0) {
+            result.append(str.substring(s, e));
+            result.append(replace);
+            s = e+pattern.length();
+        }
+        result.append(str.substring(s));
+        return result.toString();
+    }
     public void BrowserFilePathNotify(String pathSelected) {
         try {
-            FileIO f=FileIO.createConnection(pathSelected);
-            InputStream is=f.openInputStream();
-            byte[] b=new byte[(int)f.fileSize()];
-            is.read(b);
-            is.close();
-            f.close();
-            photo=b;
-            setPhoto();
+            
+            ///Alert alert=new Alert("file selected", pathSelected, null, null);
+            //alert.setTimeout(2*1000);
+            //display.setCurrent(alert, f);
+            
+            if (FileIO.fileSystemType==FileIO.SIEMENS2) { //if siemens(not JSR75) paths   // /0:/Pictures//pic.jpg
+                if (pathSelected.startsWith("/0:/")) pathSelected="0:\\"+pathSelected.substring(4);
+                if (pathSelected.startsWith("/1:/")) pathSelected="1:\\"+pathSelected.substring(4);
+                if (pathSelected.startsWith("/2:/")) pathSelected="2:\\"+pathSelected.substring(4);
+                if (pathSelected.startsWith("/3:/")) pathSelected="3:\\"+pathSelected.substring(4);
+                if (pathSelected.startsWith("/4:/")) pathSelected="4:\\"+pathSelected.substring(4);
+                pathSelected=replace(pathSelected,"//", "\\");
+                
+                //Alert alert2=new Alert("file name converted", pathSelected, null, null);
+                //alert2.setTimeout(2*1000);
+                //display.setCurrent(alert2, f);
+            
+                FileIO f=FileIO.createConnection(pathSelected);
+                f.openFile();
+				int len = (int)f.fileSize();
+				byte[] b = new byte[len];
+				f.read(b, 0, len);
+				f.close();
+                photo=b;
+                setPhoto();  
+            } else { //if other
+	            FileIO f=FileIO.createConnection(pathSelected);
+	            InputStream is=f.openInputStream();
+	            byte[] b=new byte[(int)f.fileSize()];
+	            is.read(b);
+	            is.close();
+	            f.close();
+	            photo=b;
+	            setPhoto();            
+            }
         } catch (Exception e) {e.printStackTrace();}
     }
 //#endif
