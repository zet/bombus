Index: trunk/src/Client/ChangeGroup.java
===================================================================
--- trunk/src/Client/ChangeGroup.java	(revision 0)
+++ trunk/src/Client/ChangeGroup.java	(revision 0)
@@ -0,0 +1,63 @@
+/*
+ * ChangeGroup.java
+ *
+ * Created on April 25, 2007, 8:05 PM
+ *
+ * To change this template, choose Tools | Template Manager
+ * and open the template in the editor.
+ */
+
+package Client;
+
+import com.alsutton.jabber.datablocks.IqQueryRoster;
+import java.util.Enumeration;
+import javax.microedition.lcdui.Command;
+import javax.microedition.lcdui.CommandListener;
+import javax.microedition.lcdui.Display;
+import javax.microedition.lcdui.Displayable;
+import javax.microedition.lcdui.Form;
+import javax.microedition.lcdui.StringItem;
+import javax.microedition.lcdui.TextField;
+import locale.SR;
+import ui.controls.TextFieldCombo;
+
+/**
+ *
+ * @author ad
+ */
+public class ChangeGroup implements CommandListener{
+
+    private Display display;
+    private Form f;
+    private TextFieldCombo groupName;
+    private Group group;
+    
+    private Command cmdOk=new Command(SR.MS_OK, Command.SCREEN, 1);
+    private Command cmdCancel=new Command(SR.MS_CANCEL, Command.BACK, 99);
+
+    Roster roster;
+
+    public ChangeGroup(Display display, Group group) {
+
+        this.group=group;
+        this.display=display;
+        
+        f=new Form(SR.MS_NEWGROUP);
+        
+        groupName=new TextFieldCombo(SR.MS_NEWGROUP, group.getName(), 256, TextField.ANY, "groups", display);
+        f.append(groupName);
+        
+        f.addCommand(cmdOk);
+        f.addCommand(cmdCancel);
+        
+        f.setCommandListener(this);
+        
+        display.setCurrent(f);
+    }
+
+    public void commandAction(Command command, Displayable displayable) {
+        if (command==cmdOk) 
+            StaticData.getInstance().roster.changeGroup(group.getName(), groupName.getString()); 
+        display.setCurrent(StaticData.getInstance().roster);
+    }
+}
Index: trunk/src/Client/Roster.java
===================================================================
--- trunk/src/Client/Roster.java	(revision 1075)
+++ trunk/src/Client/Roster.java	(working copy)
@@ -102,7 +102,7 @@
     private Vector hContacts;
     private Vector vContacts;
     
-    private Vector paintVContacts;  // –¥–ª—è –∞—Ç–æ–º–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
+    private Vector paintVContacts;  // –¥–ª—? –∞—Ç–æ–º–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
     
     public Groups groups;
     
@@ -595,12 +595,12 @@
         
         Jid J=new Jid(jid);
 
-        // –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –ø–æ –ø–æ–ª–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
+        // –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –ø–æ –ø–æ–ª–Ω–æ–π —?—Ç—Ä–æ–∫–µ
         Contact c=findContact(J, true); 
         if (c!=null) 
             return c;
 
-        // –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –±–µ–∑ —Ä–µ—Å—É—Ä—Å–æ–≤
+        // –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –±–µ–∑ —Ä–µ—?—É—Ä—?–æ–≤
         c=findContact(J, false);
         if (c==null) {
             if (!createInNIL) return null;
@@ -610,7 +610,7 @@
             c.setGroup(groups.getGroup(Groups.TYPE_NOT_IN_LIST));
             addContact(c);
         } else {
-            // –∑–¥–µ—Å—å jid —Å –Ω–æ–≤—ã–º —Ä–µ—Å—É—Ä—Å–æ–º
+            // –∑–¥–µ—?—å jid —? –Ω–æ–≤—ã–º —Ä–µ—?—É—Ä—?–æ–º
             if (c.origin==Contact.ORIGIN_ROSTER) {
                 c.origin=Contact.ORIGIN_ROSTERRES;
                 c.setStatus(Presence.PRESENCE_OFFLINE);
@@ -856,14 +856,14 @@
         
          theStream.loggedIn=true;
          reconnectCount=0;
-        // –∑–∞–ª–æ–≥–∏–Ω–∏–ª–∏—Å—å. —Ç–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –±—ã–ª —Ä–µ–∫–æ–Ω–Ω–µ–∫—Ç, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ—à–ª—ë–º —Å—Ç–∞—Ç—É—Å
+        // –∑–∞–ª–æ–≥–∏–Ω–∏–ª–∏—?—å. —Ç–µ–ø–µ—Ä—å, –µ—?–ª–∏ –±—ã–ª —Ä–µ–∫–æ–Ω–Ω–µ–∫—Ç, —Ç–æ –ø—Ä–æ—?—Ç–æ –ø–æ—à–ª—ë–º —?—Ç–∞—Ç—É—?
         if (reconnect) {
             querysign=reconnect=false;
             sendPresence(myStatus);
             return;
         }
         
-        // –∏–Ω–∞—á–µ –±—É–¥–µ–º —á–∏—Ç–∞—Ç—å —Ä–æ—Å—Ç–µ—Ä
+        // –∏–Ω–∞—á–µ –±—É–¥–µ–º —á–∏—Ç–∞—Ç—å —Ä–æ—?—Ç–µ—Ä
         theStream.enableRosterNotify(true);
         rpercent=60;
         if (StaticData.getInstance().account.isMucOnly()) {
@@ -954,14 +954,14 @@
                         // 
                     }
                     if (id.equals("getros")) if (type.equals("result")) {
-                        // –∞ –≤–æ—Ç –∏ —Ä–æ—Å—Ç–µ—Ä –ø–æ–¥–æ—à—ë–ª :)
+                        // –∞ –≤–æ—Ç –∏ —Ä–æ—?—Ç–µ—Ä –ø–æ–¥–æ—à—ë–ª :)
                         theStream.enableRosterNotify(false);
 
                         processRoster(data);
                         
                         setProgress(SR.MS_CONNECTED,100);
                         reEnumRoster();
-                        // —Ç–µ–ø–µ—Ä—å –ø–æ—à–ª—ë–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ
+                        // —Ç–µ–ø–µ—Ä—å –ø–æ—à–ª—ë–º –ø—Ä–∏—?—É—Ç—?—Ç–≤–∏–µ
                         querysign=reconnect=false;
                         sendPresence(myStatus);
                         //sendPresence(Presence.PRESENCE_INVISIBLE);
@@ -981,17 +981,17 @@
                 if (type.equals("get")){
                     JabberDataBlock query=data.getChildBlock("query");
                     if (query!=null){
-                        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –≤–µ—Ä—Å–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
+                        // –ø—Ä–æ–≤–µ—Ä—?–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—? –≤–µ—Ä—?–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
                         if (query.isJabberNameSpace("jabber:iq:version")) {
                             theStream.send(new IqVersionReply(data));
                             return JabberBlockListener.BLOCK_PROCESSED;                            
                         }
-                        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞
+                        // –ø—Ä–æ–≤–µ—Ä—?–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—? –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞
                         if (query.isJabberNameSpace("jabber:iq:time")) {
                             theStream.send(new IqTimeReply(data));
                             return JabberBlockListener.BLOCK_PROCESSED;
                         }
-                        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å idle
+                        // –ø—Ä–æ–≤–µ—Ä—?–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—? idle
                         if (query.isJabberNameSpace("jabber:iq:last")) {
                             theStream.send(new IqLast(data, lastMessageTime));
                             return JabberBlockListener.BLOCK_PROCESSED;
@@ -1023,7 +1023,7 @@
                 String subj=message.getSubject().trim(); if (subj.length()==0) subj=null;
                 String tStamp=message.getTimeStamp();
 		
-                int start_me=-1;    //  –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∏–∫
+                int start_me=-1;    //  –Ω–µ –¥–æ–±–∞–≤–ª—?—Ç—å –Ω–∏–∫
                 String name=null;
                 boolean groupchat=false;
                 
@@ -1045,7 +1045,7 @@
                             if (body==null) 
                                 body=name+" has changed subject to: "+subj;
                             subj=null;
-                            start_me=-1; // –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å /me –∫ subj
+                            start_me=-1; // –Ω–µ –¥–æ–±–∞–≤–ª—?—Ç—å /me –∫ subj
                             highlite=true;
                             mType=Msg.MESSAGE_TYPE_SUBJ;
                         }
@@ -1136,7 +1136,7 @@
                 
                 return JabberBlockListener.BLOCK_PROCESSED;                
             }
-            // –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ
+            // –ø—Ä–∏—?—É—Ç—?—Ç–≤–∏–µ
 
             else if( data instanceof Presence ) {
                 if (myStatus==Presence.PRESENCE_OFFLINE) return JabberBlockListener.BLOCK_REJECTED;
@@ -1239,7 +1239,7 @@
                     if (group.length()==0) group=Groups.COMMON_GROUP;
 
                     // —Ç–∞–∫ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–æ–≥–¥–∞ –ø—Ä–∏—à—ë–ª jabber:iq:roster,
-                    // –Ω–∞ –∑–∞–ø—Ä–æ—Å —Ä–æ—Å—Ç–µ—Ä–∞ –∏–ª–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
+                    // –Ω–∞ –∑–∞–ø—Ä–æ—? —Ä–æ—?—Ç–µ—Ä–∞ –∏–ª–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
 
                     //String iqType=data.getTypeAttribute();
                     //if (iqType.equals("set")) type=1;
@@ -1490,12 +1490,12 @@
             Object atcursor=getFocusedObject();
             Contact c=null;
             if (atcursor instanceof Contact) c=(Contact)atcursor;
-            // –∞ –µ—Å–ª–∏ –∫—É—Ä—Å–æ—Ä –Ω–∞ –≥—Ä—É–ø–ø–µ, —Ç–æ –∏—Å–∫–∞—Ç—å —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞.
+            // –∞ –µ—?–ª–∏ –∫—É—Ä—?–æ—Ä –Ω–∞ –≥—Ä—É–ø–ø–µ, —Ç–æ –∏—?–∫–∞—Ç—å —? —?–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞.
             else c=(Contact)hContacts.firstElement();
             
             Enumeration i=hContacts.elements();
             
-            int pass=0; // 0=–∏—â–µ–º –∫—É—Ä—Å–æ—Ä, 1=–∏—â–µ–º
+            int pass=0; // 0=–∏—â–µ–º –∫—É—Ä—?–æ—Ä, 1=–∏—â–µ–º
             while (pass<2) {
                 if (!i.hasMoreElements()) i=hContacts.elements();
                 Contact p=(Contact)i.nextElement();
@@ -1685,7 +1685,25 @@
         //System.out.println("Do autostatus change");
         setAutoStatus(Presence.PRESENCE_AWAY);
     }
+
+    public void changeGroup(String sourceGroup, String destGroup) {
+        for (Enumeration e=hContacts.elements(); e.hasMoreElements();){
+            Contact cr=(Contact)e.nextElement();
+            if (cr.getGroup().getName()==sourceGroup) {
+                theStream.send(new IqQueryRoster(cr.getBareJid(), cr.nick, destGroup, null));
+            }
+                
+        }
+    }
     
+    public void deleteGroup(Group deleteGroup) {
+        for (Enumeration e=hContacts.elements(); e.hasMoreElements();){
+            Contact cr=(Contact)e.nextElement();
+            if (cr.getGroup()==deleteGroup)
+                deleteContact(cr);                
+        }
+    }
+    
     private class ReEnumerator implements Runnable{
 
         Thread thread;
@@ -1759,13 +1777,13 @@
                     //resetStrCache();
                     if (cursor<0) cursor=0;
                     
-                    // –≤–µ—Ä–Ω—ë–º –∫—É—Ä—Å–æ—Ä –Ω–∞ –ø—Ä–µ–∂–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
+                    // –≤–µ—Ä–Ω—ë–º –∫—É—Ä—?–æ—Ä –Ω–∞ –ø—Ä–µ–∂–Ω–∏–π —?–ª–µ–º–µ–Ω—Ç
                     if ( locCursor==cursor && focused!=null ) {
                         int c=vContacts.indexOf(focused);
                         if (c>=0) moveCursorTo(c, force);
 			force=false;
                     }
-                    //if (cursor>=vContacts.size()) cursor=vContacts.size()-1; //moveCursorEnd(); // –≤–µ—Ä–Ω—ë–º –∫—É—Ä—Å–æ—Ä –∏–∑ –Ω–∏—Ä–≤–∞–Ω—ã
+                    //if (cursor>=vContacts.size()) cursor=vContacts.size()-1; //moveCursorEnd(); // –≤–µ—Ä–Ω—ë–º –∫—É—Ä—?–æ—Ä –∏–∑ –Ω–∏—Ä–≤–∞–Ω—ã
                     
                     focusedItem(cursor);
                     redraw();
Index: trunk/src/Client/RosterItemActions.java
===================================================================
--- trunk/src/Client/RosterItemActions.java	(revision 1075)
+++ trunk/src/Client/RosterItemActions.java	(working copy)
@@ -58,14 +58,18 @@
 public class RosterItemActions extends Menu implements YesNoAlert.YesNoListener{
     
     public final static int DELETE_CONTACT=4;
+    public final static int DELETE_GROUP=1004;
     
     Object item;
     
     Roster roster;
+
+    private int action;
+    
     /** Creates a new instance of RosterItemActions */
     public RosterItemActions(Display display, Object item, int action) {
 	super(item.toString());
-        
+        this.action=action;
         roster=StaticData.getInstance().roster;
         
         if (!roster.isLoggedIn()) return;
@@ -96,7 +100,7 @@
                 addItem(SR.MS_DIRECT_PRESENCE,45);
 	    }
             
-	    if (contact.origin==Contact.ORIGIN_GROUPCHAT) return; //TODO: –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–æ—Ç –∂–µ —Å–ø–∏—Å–æ–∫, —á—Ç–æ –∏ –¥–ª—è ConferenceGroup
+	    if (contact.origin==Contact.ORIGIN_GROUPCHAT) return; //TODO: –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–æ—Ç –∂–µ —?–ø–∏—?–æ–∫, —á—Ç–æ –∏ –¥–ª—? ConferenceGroup
             
             if (contact instanceof MucContact) {
                 MucContact selfContact= ((ConferenceGroup) contact.getGroup()).getSelfContact();
@@ -190,11 +194,21 @@
 			addItem(SR.MS_BANNED,14);
 		    }
 		}
-	    }
-	    //m.addItem(new MenuItem("Cleanup offlines"))
+	    } else {
+                if (    group.index!=Groups.TYPE_IGNORE
+                        && group.index!=Groups.TYPE_NOT_IN_LIST
+                        && group.index!=Groups.TYPE_SEARCH_RESULT
+                        && group.index!=Groups.TYPE_SELF
+                        && group.index!=Groups.TYPE_TRANSP)
+                {
+                    addItem(SR.MS_RENAME,1001);
+                    addItem(SR.MS_DELETE, DELETE_GROUP);
+                }
+            }
 	}
 	if (getItemCount()>0) {
-            if (action<0) attachDisplay(display);
+            if (action<0)
+                attachDisplay(display);
             else try {
                 this.display=display; // to invoke dialog Y/N
                 doAction(action);
@@ -208,7 +222,7 @@
             MenuItem me=(MenuItem) getFocusedObject();
             destroyView();
             if (me==null) return;
-            int index=me.index;
+            int index=action=me.index;
             doAction(index);
             //destroyView();
         } catch (Exception e) { e.printStackTrace();  }
@@ -402,11 +416,44 @@
                     return;
                 }
             }
+        } else {
+            Group sg=(Group)item;
+
+            if (       sg.index!=Groups.TYPE_IGNORE 
+                    && sg.index!=Groups.TYPE_NOT_IN_LIST
+                    && sg.index!=Groups.TYPE_SEARCH_RESULT
+                    && sg.index!=Groups.TYPE_SELF
+                    && sg.index!=Groups.TYPE_TRANSP)
+            {
+                switch (index) {
+                    case 1001: //rename
+                    {
+                        new ChangeGroup(display, sg);
+                        return;
+                    }
+                    case DELETE_GROUP: //delete
+                    {
+                        new YesNoAlert(display, SR.MS_DELETE_GROUP_ASK, sg.getName(), this);
+                        return;
+                    }    
+                }
+            }
         }
     }
 
     public void ActionConfirmed() {
-        roster.deleteContact((Contact)item);
+        switch (action) {
+            case DELETE_CONTACT:
+            {
+                roster.deleteContact((Contact)item);
+                break;
+            }
+            case DELETE_GROUP:
+            {
+                roster.deleteGroup((Group)item);
+                break;
+            }
+        }
         display.setCurrent(roster);
     }
 }
Index: trunk/src/Info/Version.java
===================================================================
--- trunk/src/Info/Version.java	(revision 1075)
+++ trunk/src/Info/Version.java	(working copy)
@@ -84,7 +84,7 @@
                 if (device==null) device=System.getProperty("funlights.product");
                 if (device!=null) platformName="Motorola-"+device;
                 String devicesoftware=System.getProperty("device.software.version");
-                if (devicesoftware!=null) platformName=platformName++"//"+devicesoftware;
+                if (devicesoftware!=null) platformName=platformName+"//"+devicesoftware;
             }
             
 //#if (!MIDP1)
Index: trunk/src/locale/SR.java
===================================================================
--- trunk/src/locale/SR.java	(revision 1075)
+++ trunk/src/locale/SR.java	(working copy)
@@ -306,7 +306,8 @@
     public   static String MS_AWAY_LOCK = loadString( "keyblock / flip" );
     public   static String MS_AWAY_IDLE = loadString( "idle" );
     public   static String MS_ADD_AUTOJ = loadString( "Add autojoin bookmark" );
-
+    public   static String MS_RENAME = loadString( "Rename/Move" );
+    public   static String MS_DELETE_GROUP_ASK = loadString( "Delete group?" );
     
 //2007-04-12
     
@@ -327,7 +328,6 @@
 
 
 
-
     private SR() { }
     
     private static Hashtable lang;
